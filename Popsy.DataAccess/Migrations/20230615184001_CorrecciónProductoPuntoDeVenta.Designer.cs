// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Popsy;

#nullable disable

namespace Popsy.DataAccess.Migrations
{
    [DbContext(typeof(PopsyDbContext))]
    [Migration("20230615184001_CorrecciónProductoPuntoDeVenta")]
    partial class CorrecciónProductoPuntoDeVenta
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Popsy.Entities.TblBodegaEntity", b =>
                {
                    b.Property<Guid>("bodega_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_sap")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre_bodega")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("bodega_id");

                    b.ToTable("bodegas");
                });

            modelBuilder.Entity("Popsy.Entities.TblBodegaPuntoVentaEntity", b =>
                {
                    b.Property<Guid>("bodega_punto_venta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("bodegas_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("bodega_punto_venta_id");

                    b.HasIndex("bodegas_id");

                    b.HasIndex("punto_venta_id");

                    b.ToTable("bodegas_puntos_ventas");
                });

            modelBuilder.Entity("Popsy.Entities.TblCentroLogisticoEntity", b =>
                {
                    b.Property<Guid>("centros_logisticos_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_cedi_sap")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre_cedi_sap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("centros_logisticos_id");

                    b.ToTable("centros_logisticos");
                });

            modelBuilder.Entity("Popsy.Entities.TblDetalleOrdenDeCompraEntity", b =>
                {
                    b.Property<Guid>("detalle_orden_compra_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<bool>("activo")
                        .HasColumnType("bit");

                    b.Property<int>("cantidad_solicitada")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("orden_compra_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("posicion_producto")
                        .HasColumnType("int");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unidad_presentacion_solicitada")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("detalle_orden_compra_id");

                    b.HasIndex("orden_compra_id");

                    b.HasIndex("producto_id");

                    b.ToTable("detalle_orden_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblDeterminarCompraTrasladoEntity", b =>
                {
                    b.Property<Guid>("determinar_compra_traslado_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_Venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("requiere_pedido_compra")
                        .HasColumnType("int");

                    b.HasKey("determinar_compra_traslado_id");

                    b.HasIndex("producto_id");

                    b.HasIndex("punto_Venta_id");

                    b.ToTable("determinar_compras_traslados");
                });

            modelBuilder.Entity("Popsy.Entities.TblDistritoEntity", b =>
                {
                    b.Property<Guid>("distrito_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("organizacion_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("distrito_id");

                    b.HasIndex("organizacion_venta_id");

                    b.ToTable("distritos");
                });

            modelBuilder.Entity("Popsy.Entities.TblErrorTransaccionEntity", b =>
                {
                    b.Property<Guid>("error_transaccion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("datos_enviados")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("datos_recibidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("transaccion_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("error_transaccion_id");

                    b.HasIndex("transaccion_id");

                    b.ToTable("errores_transacciones");
                });

            modelBuilder.Entity("Popsy.Entities.TblEstadoPedidoEntity", b =>
                {
                    b.Property<Guid>("estado_pedido_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("estado_pedido_id");

                    b.ToTable("estados_pedidos");
                });

            modelBuilder.Entity("Popsy.Entities.TblFactorConversionEntity", b =>
                {
                    b.Property<Guid>("factor_conversion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_fc_sap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("contador")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("unidad_base")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_medida_alter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("factor_conversion_id");

                    b.ToTable("factores_conversion");
                });

            modelBuilder.Entity("Popsy.Entities.TblHistorialEnvioRecepcionDeCompraEntity", b =>
                {
                    b.Property<Guid>("historial_envio_recepciones_compras_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("XML")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("recepcion_compra_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("historial_envio_recepciones_compras_id");

                    b.HasIndex("recepcion_compra_id");

                    b.ToTable("historial_envio_recepciones_compras");
                });

            modelBuilder.Entity("Popsy.Entities.TblHistorialUsuarioEntity", b =>
                {
                    b.Property<Guid>("historial_usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("autor_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("observacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("usuario_modificado_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("historial_usuario_id");

                    b.HasIndex("autor_id");

                    b.ToTable("historial_usuarios");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventario2Entity", b =>
                {
                    b.Property<Guid>("inventario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_inventario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tipo_inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuario_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("inventario_id");

                    b.HasIndex("punto_venta_id");

                    b.HasIndex("tipo_inventario_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("inventarios2");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioDetalle2Entity", b =>
                {
                    b.Property<Guid>("inventario_detalle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("bodega_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("cantidad")
                        .HasColumnType("float");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_consumo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("unidad_consumo_total")
                        .HasColumnType("float");

                    b.Property<string>("unidad_conteo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("unidad_conteo_total")
                        .HasColumnType("float");

                    b.Property<string>("unidad_despacho")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("unidad_despacho_total")
                        .HasColumnType("float");

                    b.HasKey("inventario_detalle_id");

                    b.HasIndex("bodega_id");

                    b.HasIndex("inventario_id");

                    b.ToTable("inventariodetalle2");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioDetalleEntity", b =>
                {
                    b.Property<Guid>("inventario_detalle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("bodega_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("cantidad")
                        .HasColumnType("float");

                    b.Property<Guid>("inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("minima_unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("producto_punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("inventario_detalle_id");

                    b.HasIndex("bodega_id");

                    b.HasIndex("inventario_id");

                    b.ToTable("inventariodetalle", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioEntity", b =>
                {
                    b.Property<Guid>("inventario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_inventario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_toma_fisica")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tipo_inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuario_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("inventario_id");

                    b.HasIndex("punto_venta_id");

                    b.HasIndex("tipo_inventario_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("inventarios", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.TblOrdenDeCompraEntity", b =>
                {
                    b.Property<Guid>("orden_compra_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_orden_compra")
                        .HasColumnType("datetime2");

                    b.Property<string>("orden_compra")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("proveedor_recepcion_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("recibida")
                        .HasColumnType("bit");

                    b.HasKey("orden_compra_id");

                    b.HasIndex("proveedor_recepcion_id");

                    b.HasIndex("punto_venta_id");

                    b.ToTable("ordenes_compras");
                });

            modelBuilder.Entity("Popsy.Entities.TblOrganizacionVentaEntity", b =>
                {
                    b.Property<Guid>("organizacion_venta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("organizacion_venta_id");

                    b.ToTable("organizaciones_ventas");
                });

            modelBuilder.Entity("Popsy.Entities.TblPedidoEntity", b =>
                {
                    b.Property<Guid>("pedido_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("DocumentoDosSap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DocumentoUnoSap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FechaMensajeSap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("estado")
                        .HasColumnType("smallint");

                    b.Property<Guid>("estado_pedido_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("mensajeReciboSap")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tipo_pedido_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<byte[]>("xml_sap")
                        .HasColumnType("binary(7000)");

                    b.HasKey("pedido_id");

                    b.HasIndex("estado_pedido_id");

                    b.HasIndex("punto_venta_id");

                    b.HasIndex("tipo_pedido_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("pedidos");
                });

            modelBuilder.Entity("Popsy.Entities.TblPermisoEntity", b =>
                {
                    b.Property<Guid>("permiso_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.HasKey("permiso_id");

                    b.ToTable("permisos");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoEntity", b =>
                {
                    b.Property<Guid>("producto_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("Categoria_Producto1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Categoria_Producto2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria_producto3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria_producto4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("contador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("denominador")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<int?>("habilitado_inventario")
                        .HasColumnType("int");

                    b.Property<int?>("habilitado_pedido")
                        .HasColumnType("int");

                    b.Property<string>("minima_unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presentacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("producto_id");

                    b.ToTable("productos");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoFactorConversionEntity", b =>
                {
                    b.Property<Guid>("producto_factor_conversion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("factor_conversion_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("producto_factor_conversion_id");

                    b.HasIndex("factor_conversion_id");

                    b.HasIndex("producto_id");

                    b.ToTable("productos_factores_conversion");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoPedidoEntity", b =>
                {
                    b.Property<Guid>("producto_pedido_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("justificacion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("null_line")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("pedido_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("stock_actual")
                        .HasColumnType("int");

                    b.Property<int>("stock_transito")
                        .HasColumnType("int");

                    b.HasKey("producto_pedido_id");

                    b.HasIndex("pedido_id");

                    b.HasIndex("producto_id");

                    b.ToTable("productos_pedidos");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoProveedorEntity", b =>
                {
                    b.Property<Guid>("productos_proveedores_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_producto_sap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_proveedor_sap")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("productos_proveedores_id");

                    b.ToTable("productos_proveedores");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoPuntoVentaEntity", b =>
                {
                    b.Property<Guid>("producto_punto_venta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("cantidad_producto_maxima")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("punto_distribucion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("stock_actual")
                        .HasColumnType("int");

                    b.Property<int>("stock_transito")
                        .HasColumnType("int");

                    b.HasKey("producto_punto_venta_id");

                    b.HasIndex("producto_id");

                    b.HasIndex("punto_venta_id");

                    b.ToTable("productos_puntos_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblProveedorRecepcionEntity", b =>
                {
                    b.Property<Guid>("proveedor_recepcion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_sap_proveedor")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("proveedor_recepcion_id");

                    b.ToTable("proveedores_recepcion");
                });

            modelBuilder.Entity("Popsy.Entities.TblPuntoVentaEntity", b =>
                {
                    b.Property<Guid>("punto_venta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("ALMACEN_CG")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ALMACEN_CGR")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ALMACEN_CONOS")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ALMACEN_CS")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("ALMACEN_CSR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ALMACEN_UT")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CENTRO_CG")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CENTRO_CGR")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CENTRO_CONOS")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CENTRO_CS")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CENTRO_CSR")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("CENTRO_UT")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DOC_CG")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DOC_CGR")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DOC_CONOS")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DOC_CS")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DOC_CSR")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("DOC_UT")
                        .IsRequired()
                        .HasMaxLength(25)
                        .HasColumnType("nvarchar(25)");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("direccion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("distrito_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("punto_venta_id");

                    b.HasIndex("distrito_id");

                    b.ToTable("puntos_ventas");
                });

            modelBuilder.Entity("Popsy.Entities.TblRecepcionDeCompraDetalleEntity", b =>
                {
                    b.Property<Guid>("recepcion_compra_detalle_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<int>("cantidad_recibida")
                        .HasColumnType("int");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("recepcion_compra_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unidad_presentacion_recibida")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("recepcion_compra_detalle_id");

                    b.HasIndex("producto_id");

                    b.HasIndex("recepcion_compra_id");

                    b.ToTable("recepciones_compras_detalle");
                });

            modelBuilder.Entity("Popsy.Entities.TblRecepcionDeCompraEntity", b =>
                {
                    b.Property<Guid>("recepcion_compra_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_recepcion_compra")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("constante")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:Identity:Seed", "1");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("constante"));

                    b.Property<short>("estado")
                        .HasColumnType("smallint");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("numero_factura")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<Guid>("orden_compra_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("recepcion_compra_id");

                    b.HasIndex("orden_compra_id");

                    b.ToTable("recepciones_compras");
                });

            modelBuilder.Entity("Popsy.Entities.TblResponsePedidoEntity", b =>
                {
                    b.Property<Guid>("respuesta_pedido_sap_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("log_msg_no")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("log_no")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message_v1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message_v2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message_v3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("message_v4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("pedido_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("respuesta_pedido_sap_id");

                    b.HasIndex("pedido_id");

                    b.ToTable("respuestas_pedidos_sap");
                });

            modelBuilder.Entity("Popsy.Entities.TblResponseRecepcionDeCompraEntity", b =>
                {
                    b.Property<Guid>("recepcion_compra_respuesta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<bool>("Activo")
                        .HasColumnType("bit");

                    b.Property<string>("Field")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("LogMsgNo")
                        .HasColumnType("int");

                    b.Property<string>("LogNo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Message")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageV1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageV2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageV3")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MessageV4")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Number")
                        .HasColumnType("int");

                    b.Property<int>("Orden")
                        .HasColumnType("int");

                    b.Property<string>("Parameter")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Row")
                        .HasColumnType("int");

                    b.Property<string>("System")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("recepcion_compra_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("recepcion_compra_respuesta_id");

                    b.HasIndex("recepcion_compra_id");

                    b.ToTable("recepciones_compras_respuesta");
                });

            modelBuilder.Entity("Popsy.Entities.TblRolEntity", b =>
                {
                    b.Property<Guid>("rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("rol_id");

                    b.ToTable("roles");
                });

            modelBuilder.Entity("Popsy.Entities.TblRolPermisoEntity", b =>
                {
                    b.Property<Guid>("rol_permiso_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("permiso_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("rol_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("rol_permiso_id");

                    b.HasIndex("permiso_id");

                    b.HasIndex("rol_id");

                    b.ToTable("roles_permisos");
                });

            modelBuilder.Entity("Popsy.Entities.TblSeguimientoPDVEntity", b =>
                {
                    b.Property<string>("COMPAÑIA")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PdV")
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("T_EN_COLA")
                        .HasColumnType("int");

                    b.Property<int>("T_HOY")
                        .HasColumnType("int");

                    b.Property<DateTime>("ULTIMA_ACTUALIZACION")
                        .HasColumnType("datetime2")
                        .HasColumnName("ULTIMA ACTUALIZACION DEL SISTEMA");

                    b.ToTable((string)null);

                    b.ToView("SeguimientoPDV", (string)null);
                });

            modelBuilder.Entity("Popsy.Entities.TblSeguimientoPDVTrackerEntity", b =>
                {
                    b.Property<string>("COMPAÑIA")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.Property<string>("PdV")
                        .HasColumnType("nvarchar(45)");

                    b.Property<int>("T_TRACKER")
                        .HasColumnType("int");

                    b.Property<DateTime>("ULTIMA_ACTUALIZACION")
                        .HasColumnType("datetime2")
                        .HasColumnName("ULTIMA ACTUALIZACION DEL SISTEMA");

                    b.ToTable("SeguimientoPDVTracker");
                });

            modelBuilder.Entity("Popsy.Entities.TblStockAFechaEntity", b =>
                {
                    b.Property<Guid>("stock_fecha_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<double>("cantidad")
                        .HasColumnType("float");

                    b.Property<DateTime>("fecha")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("stock_fecha_id");

                    b.HasIndex("producto_id");

                    b.HasIndex("punto_venta_id");

                    b.ToTable("stock_fecha");
                });

            modelBuilder.Entity("Popsy.Entities.TblStockTeoricoInventariosDos", b =>
                {
                    b.Property<Guid>("stock_teorico_inventarios_dos_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("stock_teorico")
                        .HasColumnType("float");

                    b.HasKey("stock_teorico_inventarios_dos_id");

                    b.HasIndex("producto_id");

                    b.HasIndex("punto_venta_id");

                    b.ToTable("stock_teorico_inventarios_dos");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoInventarioEntity", b =>
                {
                    b.Property<Guid>("tipo_inventario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("abreviatura_inventario")
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre_tipo_inventario")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("tipo_inventario_id");

                    b.ToTable("tipoinventario", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoPedidoCompraTrasladoEntity", b =>
                {
                    b.Property<Guid>("tipo_pedido_compra_traslado_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo_tipo_pedido_sap")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("documento_tipo_pedido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre_tipo_pedido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("tipo_pedido_compra_traslado_id");

                    b.ToTable("tipos_pedidos_compras_traslados");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoPedidoEntity", b =>
                {
                    b.Property<Guid>("tipo_pedido_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("tipo_pedido_id");

                    b.ToTable("tipo_pedido");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoPedidoPorAlmacenEntity", b =>
                {
                    b.Property<Guid>("tipo_pedido_por_almacen_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<Guid>("centro_logistico_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("codigo_almacen")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tipo_pedido_compra_traslado_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("tipo_pedido_por_almacen_id");

                    b.HasIndex("centro_logistico_id");

                    b.HasIndex("punto_venta_id");

                    b.HasIndex("tipo_pedido_compra_traslado_id");

                    b.ToTable("tipo_pedidos_por_almacen");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoTransaccionEntity", b =>
                {
                    b.Property<Guid>("tipo_transaccion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.HasKey("tipo_transaccion_id");

                    b.ToTable("tipos_transacciones");
                });

            modelBuilder.Entity("Popsy.Entities.TblTransaccionEntity", b =>
                {
                    b.Property<Guid>("transaccion_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("codigo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("es_error")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("pedido_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tipo_transaccion_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("transaccion_id");

                    b.HasIndex("pedido_id");

                    b.HasIndex("tipo_transaccion_id");

                    b.ToTable("Transacciones");
                });

            modelBuilder.Entity("Popsy.Entities.TblUnidadInventarioDos", b =>
                {
                    b.Property<Guid>("unidad_inventario_dos_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unidad_consumo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_conteo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_despacho")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("unidad_inventario_dos_id");

                    b.HasIndex("producto_id")
                        .IsUnique();

                    b.ToTable("unidades_inventarios_dos");
                });

            modelBuilder.Entity("Popsy.Entities.TblUsuarioEntity", b =>
                {
                    b.Property<Guid>("usuario_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<string>("apellidos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("cedula")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<string>("correo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("estado")
                        .HasColumnType("int");

                    b.Property<DateTime?>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("nombres")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("usuario_id");

                    b.ToTable("usuarios");
                });

            modelBuilder.Entity("Popsy.Entities.TblUsuarioPuntoVentaEntity", b =>
                {
                    b.Property<Guid>("usuario_punto_venta_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_creacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<DateTime?>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_modificacion")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("GETDATE()");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuario_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("usuario_punto_venta_id");

                    b.HasIndex("punto_venta_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("usuarios_puntos_ventas");
                });

            modelBuilder.Entity("Popsy.Entities.TblUsuarioRolEntity", b =>
                {
                    b.Property<Guid>("usuario_rol_id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("NEWSEQUENTIALID()");

                    b.Property<DateTime>("fecha_eliminacion")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("rol_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("usuario_id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("usuario_rol_id");

                    b.HasIndex("rol_id");

                    b.HasIndex("usuario_id");

                    b.ToTable("usuarios_roles");
                });

            modelBuilder.Entity("Popsy.Entities.VistaCategoriasProductosEntity", b =>
                {
                    b.Property<string>("categoria_id")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria_nombre")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vistacategoriasproductos", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaMonitorInventarioEntity", b =>
                {
                    b.Property<string>("codigo_inventario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("fecha_registro")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("fecha_toma_fisica")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre_tipo_inventario")
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("tipo_inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("usuario_inventario")
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vistamonitorInventario", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaPedidosPuntoVentaEntity", b =>
                {
                    b.Property<string>("almacen_cs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("centro_cs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("codigo_punto_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("doc_cs")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("organizacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("pedido_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable((string)null);

                    b.ToView("vistapedidospuntoventa", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaProductoFactoresConversionEntity", b =>
                {
                    b.Property<int>("contador")
                        .HasColumnType("int");

                    b.Property<Guid>("factor_conversion_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_factor_conversion_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("unidad_base")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_medida_alter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vistaproductofactoresconversion", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaProductosConStockEntity", b =>
                {
                    b.Property<int>("cantidad_producto_maxima")
                        .HasColumnType("int");

                    b.Property<string>("categoria_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("factor_conversion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minima_unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_punto_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presentacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("stock_actual")
                        .HasColumnType("int");

                    b.ToTable((string)null);

                    b.ToView("vistaproductosconstock", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaProductosParaInventarioEntity", b =>
                {
                    b.Property<int>("cantidad_producto_maxima")
                        .HasColumnType("int");

                    b.Property<string>("categoria_id")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("categoria_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("contador")
                        .HasColumnType("int");

                    b.Property<string>("factor_conversion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("minima_unidad")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_punto_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("presentacion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("producto_punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("stock_actual")
                        .HasColumnType("int");

                    b.Property<string>("unidad_base")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("unidad_medida_alter")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.ToTable((string)null);

                    b.ToView("vistaproductosparainventario", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaPuntosVentaBodegasEntity", b =>
                {
                    b.Property<Guid>("bodega_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("bodegas_punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("codigo_punto_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_bodega")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_punto_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable((string)null);

                    b.ToView("vistapuntosventabodegas", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.VistaResumenInventarioEntity", b =>
                {
                    b.Property<int>("cantidad")
                        .HasColumnType("int");

                    b.Property<Guid>("inventario_detalle_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("inventario_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("nombre_producto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre_punto_venta")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("producto_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("punto_venta_id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("usuario")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid>("usuario_id")
                        .HasColumnType("uniqueidentifier");

                    b.ToTable((string)null);

                    b.ToView("vistaresumeninventario", "SIPOP");
                });

            modelBuilder.Entity("Popsy.Entities.TblBodegaPuntoVentaEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblBodegaEntity", "bodega")
                        .WithMany("puntos_de_venta")
                        .HasForeignKey("bodegas_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("bodega_puntos_de_venta")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bodega");

                    b.Navigation("punto_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblDetalleOrdenDeCompraEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblOrdenDeCompraEntity", "orden_de_compra")
                        .WithMany("detalles_ordenes_de_compra")
                        .HasForeignKey("orden_compra_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("detalles_ordenes_de_compra")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orden_de_compra");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("Popsy.Entities.TblDeterminarCompraTrasladoEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("determinar_compra_traslados")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("determinar_compra_traslados")
                        .HasForeignKey("punto_Venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("punto_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblDistritoEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblOrganizacionVentaEntity", "organizacion_venta")
                        .WithMany("distritos")
                        .HasForeignKey("organizacion_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("organizacion_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblErrorTransaccionEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblTransaccionEntity", "transaccion")
                        .WithMany("errores")
                        .HasForeignKey("transaccion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("transaccion");
                });

            modelBuilder.Entity("Popsy.Entities.TblHistorialEnvioRecepcionDeCompraEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblRecepcionDeCompraEntity", "recepcion_compra")
                        .WithMany("historial_envios")
                        .HasForeignKey("recepcion_compra_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recepcion_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblHistorialUsuarioEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblUsuarioEntity", "autor")
                        .WithMany("historial")
                        .HasForeignKey("autor_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("autor");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventario2Entity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("inventarios2")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblTipoInventarioEntity", "tipo_inventario")
                        .WithMany("inventarios2")
                        .HasForeignKey("tipo_inventario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblUsuarioEntity", "usuario")
                        .WithMany("inventarios2")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("punto_de_venta");

                    b.Navigation("tipo_inventario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioDetalle2Entity", b =>
                {
                    b.HasOne("Popsy.Entities.TblBodegaEntity", "bodega")
                        .WithMany("inventario_detalles2")
                        .HasForeignKey("bodega_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblInventario2Entity", "inventario")
                        .WithMany("detalles")
                        .HasForeignKey("inventario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bodega");

                    b.Navigation("inventario");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioDetalleEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblBodegaEntity", "bodega")
                        .WithMany("inventario_detalles")
                        .HasForeignKey("bodega_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblInventarioEntity", "inventario")
                        .WithMany("detalles")
                        .HasForeignKey("inventario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("bodega");

                    b.Navigation("inventario");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("inventarios")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblTipoInventarioEntity", "tipo_inventario")
                        .WithMany("inventarios")
                        .HasForeignKey("tipo_inventario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblUsuarioEntity", "usuario")
                        .WithMany("inventarios")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("punto_de_venta");

                    b.Navigation("tipo_inventario");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Popsy.Entities.TblOrdenDeCompraEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblProveedorRecepcionEntity", "proveedor_recepcion")
                        .WithMany("ordenes_de_compra")
                        .HasForeignKey("proveedor_recepcion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("ordenes_de_compra")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("proveedor_recepcion");

                    b.Navigation("punto_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblPedidoEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblEstadoPedidoEntity", "estado_de_pedido")
                        .WithMany("pedidos")
                        .HasForeignKey("estado_pedido_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("pedidos")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblTipoPedidoEntity", "tipo_pedido")
                        .WithMany("pedidos")
                        .HasForeignKey("tipo_pedido_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblUsuarioEntity", "usuario")
                        .WithMany("pedidos")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("estado_de_pedido");

                    b.Navigation("punto_de_venta");

                    b.Navigation("tipo_pedido");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoFactorConversionEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblFactorConversionEntity", "factor_conversion")
                        .WithMany("factores_de_conversion")
                        .HasForeignKey("factor_conversion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("factores_de_conversion")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("factor_conversion");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoPedidoEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPedidoEntity", "pedido")
                        .WithMany("pedidos")
                        .HasForeignKey("pedido_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("pedidos")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("producto");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoPuntoVentaEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("puntos_de_venta")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("productos")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("punto_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblPuntoVentaEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblDistritoEntity", "distrito")
                        .WithMany("puntos_de_venta")
                        .HasForeignKey("distrito_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("distrito");
                });

            modelBuilder.Entity("Popsy.Entities.TblRecepcionDeCompraDetalleEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("recepciones_compras_detalles")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblRecepcionDeCompraEntity", "recepcion_compra")
                        .WithMany("recepciones_compras_detalles")
                        .HasForeignKey("recepcion_compra_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("recepcion_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblRecepcionDeCompraEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblOrdenDeCompraEntity", "orden_de_compra")
                        .WithMany("recepciones_de_compra")
                        .HasForeignKey("orden_compra_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("orden_de_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblResponsePedidoEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPedidoEntity", "pedido")
                        .WithMany("respuestas")
                        .HasForeignKey("pedido_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");
                });

            modelBuilder.Entity("Popsy.Entities.TblResponseRecepcionDeCompraEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblRecepcionDeCompraEntity", "recepcion_compra")
                        .WithMany("respuestas")
                        .HasForeignKey("recepcion_compra_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("recepcion_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblRolPermisoEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPermisoEntity", "permiso")
                        .WithMany("roles")
                        .HasForeignKey("permiso_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblRolEntity", "rol")
                        .WithMany("permisos")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("permiso");

                    b.Navigation("rol");
                });

            modelBuilder.Entity("Popsy.Entities.TblStockAFechaEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany("stocks_a_fecha")
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("stocks_a_fecha")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("punto_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblStockTeoricoInventariosDos", b =>
                {
                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithMany()
                        .HasForeignKey("producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany()
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");

                    b.Navigation("punto_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoPedidoPorAlmacenEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblCentroLogisticoEntity", "centro_logistico")
                        .WithMany("tipos_de_pedido_por_almacen")
                        .HasForeignKey("centro_logistico_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("tipos_de_pedido_por_almacen")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblTipoPedidoCompraTrasladoEntity", "tipo_pedido_compra_traslado")
                        .WithMany("tipos_de_pedido_por_almacen")
                        .HasForeignKey("tipo_pedido_compra_traslado_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("centro_logistico");

                    b.Navigation("punto_de_venta");

                    b.Navigation("tipo_pedido_compra_traslado");
                });

            modelBuilder.Entity("Popsy.Entities.TblTransaccionEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPedidoEntity", "pedido")
                        .WithMany("transacciones")
                        .HasForeignKey("pedido_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblTipoTransaccionEntity", "tipo_de_transaccion")
                        .WithMany("transacciones")
                        .HasForeignKey("tipo_transaccion_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("pedido");

                    b.Navigation("tipo_de_transaccion");
                });

            modelBuilder.Entity("Popsy.Entities.TblUnidadInventarioDos", b =>
                {
                    b.HasOne("Popsy.Entities.TblProductoEntity", "producto")
                        .WithOne("unidad_inventario")
                        .HasForeignKey("Popsy.Entities.TblUnidadInventarioDos", "producto_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("producto");
                });

            modelBuilder.Entity("Popsy.Entities.TblUsuarioPuntoVentaEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblPuntoVentaEntity", "punto_de_venta")
                        .WithMany("usuarios")
                        .HasForeignKey("punto_venta_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblUsuarioEntity", "usuario")
                        .WithMany("puntos_de_venta")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("punto_de_venta");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Popsy.Entities.TblUsuarioRolEntity", b =>
                {
                    b.HasOne("Popsy.Entities.TblRolEntity", "rol")
                        .WithMany("usuarios")
                        .HasForeignKey("rol_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Popsy.Entities.TblUsuarioEntity", "usuario")
                        .WithMany("roles")
                        .HasForeignKey("usuario_id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("rol");

                    b.Navigation("usuario");
                });

            modelBuilder.Entity("Popsy.Entities.TblBodegaEntity", b =>
                {
                    b.Navigation("inventario_detalles");

                    b.Navigation("inventario_detalles2");

                    b.Navigation("puntos_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblCentroLogisticoEntity", b =>
                {
                    b.Navigation("tipos_de_pedido_por_almacen");
                });

            modelBuilder.Entity("Popsy.Entities.TblDistritoEntity", b =>
                {
                    b.Navigation("puntos_de_venta");
                });

            modelBuilder.Entity("Popsy.Entities.TblEstadoPedidoEntity", b =>
                {
                    b.Navigation("pedidos");
                });

            modelBuilder.Entity("Popsy.Entities.TblFactorConversionEntity", b =>
                {
                    b.Navigation("factores_de_conversion");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventario2Entity", b =>
                {
                    b.Navigation("detalles");
                });

            modelBuilder.Entity("Popsy.Entities.TblInventarioEntity", b =>
                {
                    b.Navigation("detalles");
                });

            modelBuilder.Entity("Popsy.Entities.TblOrdenDeCompraEntity", b =>
                {
                    b.Navigation("detalles_ordenes_de_compra");

                    b.Navigation("recepciones_de_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblOrganizacionVentaEntity", b =>
                {
                    b.Navigation("distritos");
                });

            modelBuilder.Entity("Popsy.Entities.TblPedidoEntity", b =>
                {
                    b.Navigation("pedidos");

                    b.Navigation("respuestas");

                    b.Navigation("transacciones");
                });

            modelBuilder.Entity("Popsy.Entities.TblPermisoEntity", b =>
                {
                    b.Navigation("roles");
                });

            modelBuilder.Entity("Popsy.Entities.TblProductoEntity", b =>
                {
                    b.Navigation("detalles_ordenes_de_compra");

                    b.Navigation("determinar_compra_traslados");

                    b.Navigation("factores_de_conversion");

                    b.Navigation("pedidos");

                    b.Navigation("puntos_de_venta");

                    b.Navigation("recepciones_compras_detalles");

                    b.Navigation("stocks_a_fecha");

                    b.Navigation("unidad_inventario")
                        .IsRequired();
                });

            modelBuilder.Entity("Popsy.Entities.TblProveedorRecepcionEntity", b =>
                {
                    b.Navigation("ordenes_de_compra");
                });

            modelBuilder.Entity("Popsy.Entities.TblPuntoVentaEntity", b =>
                {
                    b.Navigation("bodega_puntos_de_venta");

                    b.Navigation("determinar_compra_traslados");

                    b.Navigation("inventarios");

                    b.Navigation("inventarios2");

                    b.Navigation("ordenes_de_compra");

                    b.Navigation("pedidos");

                    b.Navigation("productos");

                    b.Navigation("stocks_a_fecha");

                    b.Navigation("tipos_de_pedido_por_almacen");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("Popsy.Entities.TblRecepcionDeCompraEntity", b =>
                {
                    b.Navigation("historial_envios");

                    b.Navigation("recepciones_compras_detalles");

                    b.Navigation("respuestas");
                });

            modelBuilder.Entity("Popsy.Entities.TblRolEntity", b =>
                {
                    b.Navigation("permisos");

                    b.Navigation("usuarios");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoInventarioEntity", b =>
                {
                    b.Navigation("inventarios");

                    b.Navigation("inventarios2");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoPedidoCompraTrasladoEntity", b =>
                {
                    b.Navigation("tipos_de_pedido_por_almacen");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoPedidoEntity", b =>
                {
                    b.Navigation("pedidos");
                });

            modelBuilder.Entity("Popsy.Entities.TblTipoTransaccionEntity", b =>
                {
                    b.Navigation("transacciones");
                });

            modelBuilder.Entity("Popsy.Entities.TblTransaccionEntity", b =>
                {
                    b.Navigation("errores");
                });

            modelBuilder.Entity("Popsy.Entities.TblUsuarioEntity", b =>
                {
                    b.Navigation("historial");

                    b.Navigation("inventarios");

                    b.Navigation("inventarios2");

                    b.Navigation("pedidos");

                    b.Navigation("puntos_de_venta");

                    b.Navigation("roles");
                });
#pragma warning restore 612, 618
        }
    }
}
